webpackJsonp([4,56],{351:function(n,a){n.exports={rawContent:'\n# insuranceqa-corpus-zh\n保险行业语料库\n\n![](https://camo.githubusercontent.com/ae91a5698ad80d3fe8e0eb5a4c6ee7170e088a7d/687474703a2f2f37786b6571692e636f6d312e7a302e676c622e636c6f7564646e2e636f6d2f61692f53637265656e25323053686f74253230323031372d30342d30342532306174253230382e32302e3437253230504d2e706e67)\n\n## Welcome\n\n该语料库包含从网站[Insurance Library](http://www.insurancelibrary.com/) 收集的问题和答案。\n\n据我们所知，这是保险领域首个开放的QA语料库：\n\n* 该语料库的内容由现实世界的用户提出，高质量的答案由具有深度领域知识的专业人士提供。 所以这是一个具有真正价值的语料，而不是玩具。\n\n* 在上述论文中，语料库用于答复选择任务。 另一方面，这种语料库的其他用法也是可能的。 例如，通过阅读理解答案，观察学习等自主学习，使系统能够最终拿出自己的看不见的问题的答案。\n\n* 数据集分为两个部分“问答语料”和“问答对语料”。问答语料是从原始英文数据翻译过来，未经其他处理的。问答对语料是基于问答语料，又做了分词和去标去停，添加label。所以，"问答对语料"可以直接对接机器学习任务。如果对于数据格式不满意或者对分词效果不满意，可以直接对"问答语料"使用其他方法进行处理，获得可以用于训练模型的数据。\n\n欢迎任何进一步增加此数据集的想法。\n\n## 快速开始\n\n### 在Python环境中，使用pip安装\n\n兼容py2, py3\n\n```\npip install --upgrade insuranceqa_data\n```\n\n## 问答语料\n\n| - | 问题      |  答案  | 词汇（英语）  | \n| ------------- |-------------| ----- |   ----- |           \n| 训练      | 12,889 | 21,325  |    107,889        |\n| 验证      | 2,000     |  3354 |   16,931          |\n| 测试       | 2,000      |    3308 |  16,815            |\n\n每条数据包括问题的中文，英文，答案的正例，答案的负例。案的正例至少1项，基本上在*1-5*条，都是正确答案。答案的负例有*200*条，负例根据问题使用检索的方式建立，所以和问题是相关的，但却不是正确答案。\n\n```\n{\n    "INDEX": {\n        "zh": "中文",\n        "en": "英文",\n        "domain": "保险种类",\n        "answers": [""] # 答案正例列表\n        "negatives": [""] # 答案负例列表\n    },\n    more ...\n}\n```\n\n* 训练：```corpus/pool/train.json.gz```\n\n* 验证：```corpus/pool/valid.json.gz```\n\n* 测试：```corpus/pool/test.json.gz```\n\n* 答案：```corpus/pool/answers.json```\n一共有 27,413 个回答，数据格式为 ```json```:\n```\n{\n    "INDEX": {\n        "zh": "中文",\n        "en": "英文"\n    },\n    more ...\n}\n```\n\n### 中英文对照文件\n\n#### 问答对\n\n```\n格式 INDEX ++$++ 保险种类 ++$++ 中文 ++$++ 英文\n```\n\n```corpus/pool/train.txt.gz```, ```corpus/pool/valid.txt.gz```, ```corpus/pool/test.txt.gz```.\n\n#### 答案\n\n```\n格式 INDEX ++$++ 中文 ++$++ 英文\n```\n\n```corpus/pool/answers.txt.gz```\n\n语料库使用gzip进行压缩以减小体积，可以使用zmore, zless, zcat, zgrep等命令访问数据。\n\n```\nzmore pool/test.txt.gz\n```\n\n### 加载数据\n\n```python\nimport insuranceqa_data as insuranceqa\ntrain_data = insuranceqa.load_pool_train()\ntest_data = insuranceqa.load_pool_test()\nvalid_data = insuranceqa.load_pool_valid()\n\n# valid_data, test_data and train_data share the same properties\nfor x in train_data:\n    print(\'index %s value: %s ++$++ %s ++$++ %s\' % \\\n     (x, d[x][\'zh\'], d[x][\'en\'], d[x][\'answers\'], d[x][\'negatives\']))\n\nanswers_data = insuranceqa.load_pool_answers()\nfor x in answers_data:\n    print(\'index %s: %s ++$++ %s\' % (x, d[x][\'zh\'], d[x][\'en\']))\n```\n\n## 问答对语料\n使用"问答语料"，还需要做很多工作才能进入机器学习的模型，比如分词，去停用词，去标点符号，添加label标记。所以，在"问答语料"的基础上，还可以继续处理，但是在分词等任务中，可以借助不同分词工具，这点对于模型训练而言是有影响的。为了使数据能快速可用，[insuranceqa-corpus-zh](https://github.com/Samurais/insuranceqa-corpus-zh)提供了一个使用[HanLP](https://github.com/hankcs/HanLP)分词和去标，去停，添加label的数据集，这个数据集完全是基于"问答语料"。\n\n```python\nimport insuranceqa_data as insuranceqa\ntrain_data = insuranceqa.load_pairs_train()\ntest_data = insuranceqa.load_pairs_test()\nvalid_data = insuranceqa.load_pairs_valid()\n\n# valid_data, test_data and train_data share the same properties\nfor x in test_data:\n    print(\'index %s value: %s ++$++ %s ++$++ %s\' % \\\n     (x[\'qid\'], x[\'question\'], x[\'utterance\'], x[\'label\']))\n\nvocab_data = insuranceqa.load_pairs_vocab()\nvocab_data[\'word2id\'][\'UNKNOWN\']\nvocab_data[\'id2word\'][0]\nvocab_data[\'tf\']\nvocab_data[\'total\']\n```\n\n```vocab_data```包含```word2id```(dict, 从word到id), ```id2word```(dict, 从id到word),```tf```(dict, 词频统计)和```total```(单词总数)。 其中，未登录词的标识为```UNKNOWN```，未登录词的id为0。\n\n```train_data```, ```test_data``` 和 ```valid_data``` 的数据格式一样。```qid``` 是问题Id，```question``` 是问题，```utterance``` 是回复，```label``` 如果是 ```[1,0]``` 代表回复是正确答案，```[0,1]``` 代表回复不是正确答案，所以 ```utterance``` 包含了正例和负例的数据。每个问题含有10个负例和1个正例。\n\n```train_data```含有问题12,889条，数据 ```141779```条，正例：负例 = 1:10\n```test_data```含有问题2,000条，数据 ```22000```条，正例：负例 = 1:10\n```valid_data```含有问题2,000条，数据 ```22000```条，正例：负例 = 1:10\n\n句子长度:\n\n```\nmax len of valid question : 31, average: 5(max)\nmax len of valid utterance: 878(max), average: 165(max)\nmax len of test question : 33, average: 5\nmax len of test utterance: 878, average: 161\nmax len of train question : 42(max), average: 5\nmax len of train utterance: 878, average: 162\nvocab size: 24997\n```\n\n## 可将本语料库和以下开源码配合使用\n\n[DeepQA2](https://github.com/Samurais/DeepQA2)\n\n[InsuranceQA TensorFlow](https://github.com/l11x0m7/InsuranceQA)\n\n[Chatbot Retrieval](https://github.com/dennybritz/chatbot-retrieval)\n\n## 声明\n\n声明1 : [insuranceqa-corpus-zh](https://github.com/Samurais/insuranceqa-corpus-zh)\n\n本数据集使用翻译 [insuranceQA](https://github.com/shuzi/insuranceQA)而生成，代码发布证书 GPL 3.0。数据仅限于研究用途，如果在发布的任何媒体、期刊、杂志或博客等内容时，必须注明引用和地址。\n\n```\nInsuranceQA Corpus, Hai Liang Wang, https://github.com/Samurais/insuranceqa-corpus-zh, 07 27, 2017\n```\n\n任何基于[insuranceqa-corpus](https://github.com/Samurais/insuranceqa-corpus-zh)衍生的数据也需要开放并需要声明和“声明1”和“声明2”一致的内容。\n\n声明2 : [insuranceQA](https://github.com/shuzi/insuranceQA)\n\n此数据集仅作为研究目的提供。如果您使用这些数据发表任何内容，请引用我们的论文：[Applying Deep Learning to Answer Selection: A Study and An Open Task](https://arxiv.org/abs/1508.01585)。Minwei Feng, Bing Xiang, Michael R. Glass, Lidan Wang, Bowen Zhou @ 2015',metaData:{layout:"post",title:"机器学习保险行业问答开放数据集",excerpt:"该语料库包含从网站Insurance Library 收集的问题和答案。据我们所知，这是保险领域首个开放的QA语料库。",category:"research",tags:["deeplearning","corpus"],disqus:!0}}}});